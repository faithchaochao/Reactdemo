{"version":3,"sources":["components/List.js","components/Buttons.js","pages/Home.js","pages/context.js","components/Control.js","pages/Demo02.js","pages/Demo01.js","pages/App.js","pages/Hoc.js","pages/Input.js","pages/List.js","pages/TodoList.js","index.js"],"names":["List","props","data","map","item","key","id","tltle","Buttons","onClick","getData","React","Component","Context","createContext","Demo02","Consumer","changeData","Demo01","style","width","height","defaultProps","name","console","log","withFetch","Com","url","Topic","state","fetch","then","res","json","setState","this","displayName","Input","dangerouslySetInnerHTML","__html","content","title","htmlFor","ref","inp","input","value","inpValue","type","onChange","handleChange","addTodo","arr1","todos","filter","done","arr2","length","renderTodos","TodoList","e","target","delTodo","idx","index","toggle","newTodos","JSON","parse","stringify","todo","checked","localStorage","getItem","setItem","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b211100c.chunk.js","sourcesContent":["import React from 'react';\r\nlet List = (props) => {\r\n    return <ul> {\r\n        props.data.map((item) => <li key={item.id}> { item.tltle } </li>)\r\n        }\r\n        </ul>\r\n}\r\n\r\n\r\nexport default List;","import React from 'react';\r\n//从子组件往父组件传，在父组件里声明一个函数，子组件里写props参数\r\n//组件里传是单向的\r\nconst Buttons = (props)=>{\r\n    const btns = [1, 2, 3, 4, 5];\r\n    return <div>\r\n        {\r\n\r\nbtns.map((item) => <button key = { item }\r\n                        onClick = {\r\n                            () => props.getData(item)\r\n                        } > { item } </button>)\r\n\r\n\r\n}\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Buttons;\r\n\r\n","import React from 'react';\r\nimport List  from'../components/List';\r\nimport Button from'../components/Buttons';\r\nimport Buttons from '../components/Buttons';\r\nclass Home extends React.Component {\r\n        constructor() {\r\n            super()\r\n            this.state = {\r\n                    data: []\r\n                }\r\n                // fetch('https://cnodejs.org/api/v1/topics').then(res=>res.json).then(({data}) =>{ //data用大括号直接解构出来\r\n                //     this.setState({data});\r\n\r\n            // })\r\n\r\n        }\r\n        componentDidMount() {\r\n            fetch('https://cnodejs.org/api/v1/topics')\r\n                .then(res => res.json())\r\n                .then(({ data }) => {\r\n                    console.log(data);\r\n                    this.setState({ data })\r\n                })\r\n        }\r\n\r\n        handleClick = () => {\r\n            console.log(this);\r\n        }\r\n        getData = (page) => {\r\n            fetch('https://cnodejs.org/api/v1/topics/page=' + page)\r\n                .then(res => res.json())\r\n                .then(({ data }) => {\r\n                    console.log(data);\r\n                    this.setState({ data })\r\n                })\r\n\r\n            console.log(page)\r\n        }\r\n        render() {\r\n            const { data } = this.state;\r\n            return <div>\r\n                <Buttons getData = {this.getData}/>\r\n\r\n                <List data = { data }/>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                }\r\n\r\n        }\r\n//命名导出\r\n//export {Home} 命名导出，解构对象，实际上是创建了一个对象{Home:Home}\r\n//默认导出 只能导出一个\r\nexport default Home;","import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","import React, { Component } from 'react';\r\nimport './control.css';\r\n// 组件名首字母一定要大写\r\nclass Control extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        //this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n\r\n    \r\n    addTodo = ()=>{\r\n        if(this. state.inpValue == \"\"){\r\n            return;\r\n        }\r\n\r\n        \r\n        this.setState({\r\n            \r\n                todos: [\r\n                    {\r\n                        title: this.state.inpValue,\r\n                        done: false\r\n                    },\r\n                    ...this.state.todos\r\n                ]\r\n          \r\n        })\r\n        this.setState({inpValue:''})\r\n        \r\n    }\r\n    delTodo = (idx)=>{\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        // newTodos.splice(idx,1);\r\n        // this.setState({todos:newTodos});\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n        // setState 是异步执行的，注意callback的用法\r\n        // this.setState({\r\n        //     todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        // },()=>{\r\n        //     localStorage.setItem(\r\n        //         'todos',\r\n        //         JSON.stringify(this.state.todos)\r\n        //     )\r\n        // });\r\n\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                    onClick={()=>this.toggle(idx)}\r\n                    checked={done} \r\n                    type=\"checkbox\"/>\r\n                    <span dangerouslySetInnerHTML = {{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter( item => !item.done);\r\n        // console.log(arr1);\r\n        return (\r\n            <div className=\"box\">\r\n                <label htmlFor='inp'>todoList</label>\r\n                <input \r\n                    id='inp'\r\n                    ref={inp=>this.input = inp}\r\n                    value={inpValue} \r\n                    type=\"text\" \r\n                    onChange={this.handleChange}\r\n                />\r\n                <button onClick={this.addTodo}>添加</button>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                <ul>\r\n                    {this.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成</h2>\r\n                <ul style={{color:3<2?'red':'green'}}>\r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n                {/* 条件渲染\r\n                {\r\n                    3>21\r\n                    ?<button>登录</button>\r\n                    :<span>hello</span>\r\n                }\r\n\r\n                <button>{2>3?'登录':'注册'}</button> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Control;\r\n","import React from 'react'\r\nimport Context from './context'\r\n\r\nconst Demo02 = () => {\r\n    return (\r\n        <div>\r\n            <h2>Demo02</h2>\r\n            <Context.Consumer>\r\n                {\r\n                    ({data})=>data.map(item=><li key={item}>{item}</li>)\r\n                }\r\n            </Context.Consumer>\r\n            <Context.Consumer>\r\n                {\r\n                    ({changeData})=><button onClick={()=>changeData(123)}>点击</button>\r\n                }\r\n            </Context.Consumer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo02\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './context'\r\nimport Demo02 from './Demo02'\r\n\r\nconst Demo01 = (props) => {\r\n    return (\r\n        <div style={{\r\n            width:100,\r\n            height:100,\r\n        }}>\r\n            <h2>Demo01</h2>\r\n            <ul>\r\n                <Context.Consumer>\r\n                    {\r\n                        ({data})=>data.map(\r\n                            item=><li key={item}>{item}</li>\r\n                        )\r\n                    }\r\n                </Context.Consumer>\r\n            </ul>\r\n            <Demo02 />\r\n        </div>\r\n    )\r\n}\r\n\r\nDemo01.propTypes = {\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nDemo01.defaultProps = {\r\n    name: 'tom'\r\n}\r\n\r\nexport default Demo01\r\n// rcc\r\n// rafc\r\n// rafce\r\n\r\n","import React from 'react'\r\nimport Context from './context'\r\nimport Demo01 from './Demo01';\r\nimport { render } from 'react-dom';\r\nconsole.log(Context);\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data:['hello','context'],\r\n        }\r\n    }\r\n    changeData = (newData)=>{\r\n        this.setState({data:[...this.state.data,newData]})\r\n    }\r\n    render(){\r\n        return (\r\n            <Context.Provider value={{\r\n                data:this.state.data,\r\n                changeData:this.changeData\r\n            }}>\r\n                <Demo01 />\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n\r\n","import { render } from '@testing-library/react';\r\n//higher order componet\r\nimport React, { Component } from 'react'\r\n\r\n\r\nconst withFetch = (Com,url) =>{\r\n    class Topic extends Component{\r\n    \r\n        constructor(){\r\n            super();\r\n            this.state ={\r\n                data:[]\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            fetch(url)\r\n            .then(res=>res.json())\r\n            .then(res=>this.setState({data:res.data}))\r\n        }\r\n        render(){\r\n            return <Com {...this.props} data={this.state.data}/>\r\n        }       \r\n\r\n    }\r\n    Topic.displayName =`withFetch(${Com.name})`\r\n    return Topic; \r\n    \r\n}\r\n\r\n\r\n\r\nconst De =(props)=>{\r\n    \r\n    \r\n        return <div>\r\n                <h1>标题{props.name}</h1>\r\n                \r\n                <div dangerouslySetInnerHTML ={\r\n                    {__html:props.data.content}}>\r\n\r\n                </div>\r\n            </div>\r\n        \r\n    \r\n}\r\nexport const Detail = withFetch(De);\r\nconst Ho = (props)=>{\r\n    console.log(props.data);\r\n    return <ul>\r\n        {\r\n            props.data.map((item)=><li>{item.title}</li>)\r\n        }\r\n\r\n    </ul>\r\n }\r\nconst Hoc = withFetch(Ho,'https://cnodejs.org/api/v1/topics');\r\n\r\nexport default Hoc;\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass Input extends Component {  \r\n    render() {\r\n        \r\n        return <div>\r\n                <label htmlFor='inp'>todoList</label>\r\n                <input \r\n                    ref={inp=>this.input = inp}\r\n                    value={this.props.inpValue}\r\n                    type=\"text\" \r\n                    onChange={this.props.handleChange}\r\n                />\r\n                <button onClick={this.props.addTodo}>添加</button>\r\n            </div>\r\n        \r\n    }\r\n}\r\n\r\nexport default Input\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass List extends Component {\r\n    render() {\r\n        let arr1 = this.props.todos.filter(item => item.done)\r\n        let arr2 = this.props.todos.filter(item => !item.done)\r\n        return <div>\r\n          <h2>正在进行{arr2.length}</h2>\r\n          <ul>\r\n            {this.props.renderTodos(false)}\r\n          </ul>\r\n          <h2>已经完成{arr1.length}</h2>\r\n          <ul>\r\n            {this.props.renderTodos(true)}\r\n          </ul>\r\n        </div>\r\n      }\r\n    \r\n}\r\n\r\nexport default List\r\n","import React, { Component } from 'react'\r\nimport Input from '../pages/Input';\r\nimport List from '../pages/List';\r\n\r\nclass TodoList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos: []\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ inpValue: e.target.value })\r\n    }\r\n    componentDidMount() {\r\n        let todos = localStorage.getItem('todos');\r\n        if (todos) {\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = () => {\r\n        console.log('!!!!!!!!!!!!');\r\n        if (this.state.inpValue == '') {\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({ inpValue: '' })\r\n    }\r\n    delTodo = (idx) => {\r\n        this.setState({\r\n            todos: this.state.todos.filter((item, index) => index != idx)\r\n        });\r\n    }\r\n    toggle = (index) => {\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                    onClick={()=>this.toggle(idx)}\r\n                    checked={done} \r\n                    type=\"checkbox\"/>\r\n                    <span dangerouslySetInnerHTML = {{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n \r\n    render() {\r\n        const {todos,inpValue} = this.state;\r\n        \r\n        return <div className=\"box\">\r\n                <Input inpValue={inpValue} handleChange={this.handleChange} addTodo={this.addTodo}/>\r\n                <List todos = {todos} renderTodos={this.renderTodos}/>              \r\n            </div>\r\n        \r\n    }\r\n}\r\n\r\nexport default TodoList\r\n\r\n","import React , {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Home from './pages/Home';\r\nimport Control from'./components/Control';\r\nimport Demo01 from './pages/Demo01';\r\nimport App from './pages/App';\r\nimport Hoc , {Detail} from './pages/Hoc';\r\nimport Hook from './pages/Hook';\r\nimport TodoList from './pages/TodoList';\r\n//import Context from './pages/Context';\r\n//import TodoList from './pages/TodoLsit';\r\n//ctrl+shift+L 选中所有被选中的单词，进行删改\r\n\r\n\r\n\r\nReactDOM.render( \r\n    <TodoList/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n                //let ele = < h1 id = \"title\" className = 'tit><div> hello</div> react </h1>\r\n                //let ele = React.createElement('h1',{id:'title'},'hello react');'><\r\n                // let ele = {\r\n                //         /* <h1 id = 'title' className = 'tit' >\r\n\r\n                //             <div> 当前时间 </div> { new Date().toLocaleString() },\r\n\r\n                //             </h1>;     */\r\n                //     }\r\n                //组件声明\r\n                //     //函数组件\r\n                //     //UI组件\r\n                // function App(props) {\r\n                //     const { title, id } = props;\r\n                //     return <div >\r\n                //         <h1 > APP组件内容 </h1> \r\n                //         <div > { props.title } </div>\r\n                //         <div > hello </div> \r\n                //         </div>\r\n                // }\r\n                //智能组件\r\n                // class Demo extends React.Component {\r\n                //     constructor() {\r\n                //         super();\r\n                //         //声明状态\r\n                //         this.state = {\r\n                //             name: 'tom'\r\n                //         }\r\n                //         setTimeout(() => {\r\n                //             this.setState({ name: 'jerry' })\r\n                //         }, 3000)\r\n                //     }\r\n                //     render() {\r\n                //         return <div>\r\n                //             <div > name: { this.state.name } </div> \r\n                //             <App title:{this.state.title}  id = 'app'/>\r\n                //             <App title = '任意值' id = 'app' / >\r\n                //             <App title = '任意值' id = 'app' / >\r\n                //         </div>;\r\n                //     }\r\n\r\n                // }\r\n\r\n                // let ReactDOM = {\r\n                //     render(eleobj, container) {\r\n                //         //解构\r\n                //         const { type, props } = elebobj;\r\n                //         //创建第一层节点\r\n                //         let ele = document.createElement(type)\r\n                //             //将第一层节点添加到容器中\r\n                //         container.appendChild(ele);\r\n                //         //遍历属性对象，将属性添加到第一层节点对象上\r\n                //         for (const prop in props) {\r\n                //             if (prop == 'children') {\r\n                //                 if(props.children == 'string'){\r\n                //                     const txtNode = document.createTextNode(props.children);\r\n                //                     ele.appendChild(txtNode);\r\n                //                     break;\r\n                //                 }\r\n                //                 //将第一层节点对象的子元素添加进去\r\n                //                 //ele.setAttribute('class',props[prop]);\r\n                //                 //ele[prop]= props[prop];+\r\n                //                 props.children.forEach(child => {\r\n                //                     if (typeof child == 'string') {\r\n                //                         const txtNode = document.createTextNode('child');\r\n                //                         ele.appendChild(txtNode);\r\n                //                     }\r\n                //                     ReactDOM.render(child, ele);\r\n                //                 })\r\n\r\n                //             } else {\r\n                //                 ele[prop] = props[prop];\r\n                //             }\r\n                //         }\r\n\r\n                //     }\r\n                // }"],"sourceRoot":""}